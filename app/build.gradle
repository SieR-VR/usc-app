def buildAsLibrary = project.hasProperty('BUILD_AS_LIBRARY');
def buildAsApplication = !buildAsLibrary
if (buildAsApplication) {
    apply plugin: 'com.android.application'
}
else {
    apply plugin: 'com.android.library'
}
android {
    compileSdk 30
    ndkVersion System.env.NDK_VERSION

    defaultConfig {
        applicationId "com.example.unnamed_sdvx_clone"
        minSdk 30
        targetSdk 30
        versionCode 1
        versionName "1.0"

        ndk {
            abiFilters System.env.ANDROID_ABI
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                def ndkDir = android.ndkDirectory
                
                cppFlags '-std=c++17'
                arguments "-DANDROID=1", 
                          "-DANDROID_STL=c++_shared",
                          "-DANDROID_SYSROOT_PATH=$ndkDir/toolchains/llvm/prebuilt/linux-x86_64/sysroot/", 
                          "-DANDROID_NDK_PLATFORM=$ndkDir/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/lib/$System.env.NDK_PLATFORM_ARCH/$targetSdk",
                          "-DCMAKE_TOOLCHAIN_FILE=$System.env.PROJECT_PATH/vcpkg/scripts/buildsystems/vcpkg.cmake",
                          "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$ndkDir/build/cmake/android.toolchain.cmake",
                          "-DVCPKG_TARGET_TRIPLET=$System.env.VCPKG_TARGET_TRIPLET",
                          "-DANDROID_ABI=$System.env.ANDROID_ABI"
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDir 'src/main/cpp/bin'
            assets.srcDir 'src/main/assets'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }
    buildFeatures {
        viewBinding true
    }

    if (buildAsLibrary) {
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith(".aar")) {
                    def fileName = "org.libsdl.app.aar";
                    output.outputFile = new File(outputFile.parent, fileName);
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    def appcompat_version = "1.3.0"
    def activity_version = "1.3.1"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.activity:activity:$activity_version"
}